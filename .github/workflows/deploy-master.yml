name: Deploy Master

on:
  release:
    types: [ published ]

env:
    PROJECT_NAME_IMPLEMENTATION: Super.Core.ErrorDetails
    PROJECT_NAME_CONTRACT: Super.Core.ErrorDetails.Contract
    PROJECT_NAME_DEFAULT: Super.Core.ErrorDetails.Default
    
    GITHUB_FEED: https://nuget.pkg.github.com/cschulzsuper/
    NUGET_FEED: https://api.nuget.org/v3/index.json
    PACKAGE_VERSION: ${{ github.event.release.tag_name }}

jobs:
  build:

    runs-on: ubuntu-latest
    
    permissions:
      packages: write

    steps:
          
    - uses: actions/checkout@v2
  
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.202
    
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Implementation
      run: dotnet build -c Release --no-restore -p:Version=${PACKAGE_VERSION/v} src/$PROJECT_NAME_IMPLEMENTATION/$PROJECT_NAME_IMPLEMENTATION.csproj

    - name: Pack Implementation
      run: dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=${PACKAGE_VERSION/v} src/$PROJECT_NAME_IMPLEMENTATION/$PROJECT_NAME_IMPLEMENTATION.csproj

    - name: Push Implementation to GitHub Feed
      run: dotnet nuget push ./src/${{ env.PROJECT_NAME_IMPLEMENTATION }}/bin/Release/*.nupkg --source $GITHUB_FEED --api-key ${{github.token}} --skip-duplicate --no-symbols true

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./src/${{ env.PROJECT_NAME_IMPLEMENTATION }}/bin/Release/*.nupkg


    - name: Build Contract
      run: dotnet build -c Release --no-restore -p:Version=${PACKAGE_VERSION/v} src/$PROJECT_NAME_CONTRACT/$PROJECT_NAME_CONTRACT.csproj

    - name: Pack Contract
      run: dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=${PACKAGE_VERSION/v} src/$PROJECT_NAME/$PROJECT_NAME_CONTRACT.csproj

    - name: Push Contract to GitHub Feed
      run: dotnet nuget push ./src/${{ env.PROJECT_NAME_CONTRACT }}/bin/Release/*.nupkg --source $GITHUB_FEED --api-key ${{github.token}} --skip-duplicate --no-symbols true

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./src/${{ env.PROJECT_NAME_CONTRACT }}/bin/Release/*.nupkg


    - name: Build Default
      run: dotnet build -c Release --no-restore -p:Version=${PACKAGE_VERSION/v} src/$PROJECT_NAME_DEFAULT/$PROJECT_NAME_DEFAULT.csproj

    - name: Pack Default
      run: dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=${PACKAGE_VERSION/v} src/$PROJECT_NAME/$PROJECT_NAME_DEFAULT.csproj

    - name: Push Default to GitHub Feed
      run: dotnet nuget push ./src/${{ env.PROJECT_NAME_DEFAULT }}/bin/Release/*.nupkg --source $GITHUB_FEED --api-key ${{github.token}} --skip-duplicate --no-symbols true

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./src/${{ env.PROJECT_NAME_DEFAULT }}/bin/Release/*.nupkg

  release:
    needs: build
    if: github.event.release.prerelease == false
    runs-on: ubuntu-latest
    steps:
      
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg
    
      - name: Push to Nuget Feed
        run: dotnet nuget push ./nupkg/*.nupkg --source $NUGET_FEED --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }}
